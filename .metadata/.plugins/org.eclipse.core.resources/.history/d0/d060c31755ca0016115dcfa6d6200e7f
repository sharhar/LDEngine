package game;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;

import engine.rendering.Texture;
import engine.rendering.shapes.QuadAA;
import engine.utils.math.Vector2f;
import game.entities.Hero;
import game.entities.Level;
import net.ddns.sharhar.tcp.TcpClient;
import net.ddns.sharhar.tcp.TcpClientCallback;
import net.ddns.sharhar.udp.UdpClient;
import net.ddns.sharhar.udp.UdpClientCallback;

public class OnlineGame extends GameView implements TcpClientCallback, UdpClientCallback{
	
	public TcpClient login;
	public UdpClient client;
	
	volatile private Hero[] heros;
	int id = -1;
	
	public OnlineGame(int port) {
		login = new TcpClient(GameController.client.client.address, port, this);
		login.start();
		
		client = new UdpClient(GameController.client.client.address, port, this);
		client.start();
		
		BufferedImage img = new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB);
		Graphics g = img.getGraphics();
		g.setColor(Color.black);
		g.fillRect(0, 0, 1, 1);
		g.dispose();
		
		Texture tex = new Texture(img);
		
		QuadAA[] quads = new QuadAA[4];
		quads[0] = new QuadAA(new Vector2f(Game.WIDTH/2, 100), new Vector2f(400, 40), tex);
		quads[1] = new QuadAA(new Vector2f(Game.WIDTH/2 - 200, 250), new Vector2f(200, 40), tex);
		quads[2] = new QuadAA(new Vector2f(Game.WIDTH/2 + 200, 250), new Vector2f(200, 40), tex);
		quads[3] = new QuadAA(new Vector2f(Game.WIDTH/2, 400), new Vector2f(400, 40), tex);
		
		Vector2f[] spawns = new Vector2f[1];
		spawns[0] = new Vector2f(Game.WIDTH/2, 150);
		
		level = new Level(quads, spawns);
		
		/*
		heros = new Hero[heroNum];
		
		heros[0] = new PlayerHero(level.spawns[0], this);
		
		for(int i = 1;i < heros.length;i++) {
			heros[i] = new AIHero(level.spawns[i]);
		}
		*/
	}
	
	public void connected() {
		
	}

	public void receivedData(String data) {
		if(data.startsWith("NM ")) {
			id = Integer.parseInt(data.split(" ")[1]);
		} else if(data.startsWith("PN ")) {
			int num = Integer.parseInt(data.split(" ")[1]);
			
			heros = new Hero[heroNum];
			
			heros[0] = new PlayerHero(level.spawns[0], this);
			
			for(int i = 1;i < heros.length;i++) {
				heros[i] = new AIHero(level.spawns[i]);
			}
		}
	}
	
	public void render() {
		
	}

	public void postRender(Graphics g) {
		
	}
	
	public void receivedData(byte[] data) {
		
	}
}
