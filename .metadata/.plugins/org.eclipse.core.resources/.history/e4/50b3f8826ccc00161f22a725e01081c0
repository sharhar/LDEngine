package game.entities;

import java.awt.event.KeyEvent;

import engine.input.Keyboard;
import engine.utils.math.Vector2f;
import game.Game;
import game.GameView;

public class PlayerHero extends Hero{
	
	private int maxJumps = 2;
	float jumpHeight = 200;
	float G = -8*jumpHeight;
	float yVel = 0;
	private boolean jumped = false;
	protected GameView view;
	protected boolean attacked = false;
	private int jumps = 0;
	private int dir = 0;

	public PlayerHero(Vector2f pos, GameView view) {
		super(pos);
		
		this.view = view;
		
	}
	
	@Override
	public void draw() {
		super.draw();
	}
	
	public void tick() {
		float speed = 400;
		
		if(Keyboard.keys[KeyEvent.VK_LEFT]) {
			pos.x -= speed * Game.deltaTime;
			
			if(view.level.col(this)) {
				pos.x += speed * Game.deltaTime;
			}
			
			texID = 1;
			dir = 1;
			ar = (float) Math.PI;
		}
		
		if(Keyboard.keys[KeyEvent.VK_RIGHT]) {
			pos.x += speed * Game.deltaTime;
			
			if(view.level.col(this)) {
				pos.x -= speed * Game.deltaTime;
			}
			
			texID = 0;
			dir = 0;
			ar = 0;
		}
		
		yVel += G * Game.deltaTime;
		
		pos.y += yVel * Game.deltaTime;
		
		if(view.level.col(this)) {
			pos.y -= yVel * Game.deltaTime;
			if(yVel < 0) {
				jumps = 0;	
			}
			yVel = 0;
		}
		
		if(Keyboard.keys[KeyEvent.VK_UP] && !jumped && jumps < maxJumps) {
			yVel = 4 * jumpHeight;
			jumps++;
			jumped = true;
		}
		
		if(!Keyboard.keys[KeyEvent.VK_UP]) {
			jumped = false;
		}
		
		if(attack.size.x > 0) {
			
		}
		
		otherTick();
	}
	
	public void otherTick() {
		if(Keyboard.keys[KeyEvent.VK_Z] && !attacked) {
			attack();
			attacked = true;
		}
		
		if(!Keyboard.keys[KeyEvent.VK_Z]) {
			attacked = false;
		}
	}
}
