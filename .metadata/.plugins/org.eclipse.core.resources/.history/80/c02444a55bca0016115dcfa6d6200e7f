package server;

import net.ddns.sharhar.tcp.TcpServer;
import net.ddns.sharhar.tcp.TcpServer.TcpServerClient;
import net.ddns.sharhar.tcp.TcpServerCallback;
import net.ddns.sharhar.udp.UdpServer;
import net.ddns.sharhar.udp.UdpServerCallback;
import utils.ByteUtils;

public class GameServer implements TcpServerCallback, UdpServerCallback {
	
	public TcpServer tcpServer;
	public UdpServer udpServer;
	public String name;
	public int port;
	public int playerNum = 1;
	public float[] poss;
	
	public GameServer(int port) {
		tcpServer = new TcpServer(port, this);
		tcpServer.start();
		
		udpServer = new UdpServer(port+1, this);
		udpServer.start();
		
		this.port = port;
		name = "Game " + port;
		
		poss = new float[2*playerNum];
	}
	
	public void receivedData(int id, TcpServerClient client, String data) {
		
	}

	public void connected(int id, TcpServerClient client) {
		client.sendData("NM " + id);
		client.sendData("PN " + playerNum);
	}

	public void disconnected(int id, TcpServerClient client) {
			
	}
	
	public void receivedData(int id, byte[] data) {
		float[] pos = ByteUtils.byte2Float(data, 2);
		
		poss[id*2+0] = pos[0];
	}
}
